{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Desktop/Nodejs/nextjs/ch2/next-app2/pages/users/[name].jsx\";\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\n\nconst name = ({\n  user\n}) => {\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Profile, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    name\n  } = query;\n\n  try {\n    let user;\n    let repos;\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n\n    const repoRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&page=1&perpage=10`);\n\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n\n    console.log(repos);\n    return {\n      props: {\n        user,\n        repos\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      props: {}\n    };\n  }\n};\nexport default name;","map":{"version":3,"sources":["/Users/mac/Desktop/Nodejs/nextjs/ch2/next-app2/pages/users/[name].jsx"],"names":["fetch","Profile","name","user","getServerSideProps","query","repos","userRes","status","json","repoRes","console","log","props","e"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAVD;;AAYA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACrD,QAAM;AAAEH,IAAAA;AAAF,MAAWG,KAAjB;;AAEA,MAAI;AACF,QAAIF,IAAJ;AACA,QAAIG,KAAJ;AAEA,UAAMC,OAAO,GAAG,MAAMP,KAAK,CAAE,gCAA+BE,IAAK,EAAtC,CAA3B;;AACA,QAAIK,OAAO,CAACC,MAAR,KAAmB,GAAvB,EAA4B;AAC1BL,MAAAA,IAAI,GAAG,MAAMI,OAAO,CAACE,IAAR,EAAb;AACD;;AACD,UAAMC,OAAO,GAAG,MAAMV,KAAK,CACxB,gCAA+BE,IAAK,uCADZ,CAA3B;;AAGA,QAAIQ,OAAO,CAACF,MAAR,KAAmB,GAAvB,EAA4B;AAC1BF,MAAAA,KAAK,GAAG,MAAMI,OAAO,CAACD,IAAR,EAAd;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,WAAO;AAAEO,MAAAA,KAAK,EAAE;AAAEV,QAAAA,IAAF;AAAQG,QAAAA;AAAR;AAAT,KAAP;AACD,GAhBD,CAgBE,OAAOQ,CAAP,EAAU;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,WAAO;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD;AACF,CAvBM;AAyBP,eAAeX,IAAf","sourcesContent":["import css from 'styled-jsx/css';\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\n\nconst name = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n      <Profile user={user} />\n    </>\n  );\n};\n\nexport const getServerSideProps = async ({ query }) => {\n  const { name } = query;\n\n  try {\n    let user;\n    let repos;\n\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n    const repoRes = await fetch(\n      `https://api.github.com/users/${name}/repos?sort=updated&page=1&perpage=10`\n    );\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n    console.log(repos);\n    return { props: { user, repos } };\n  } catch (e) {\n    console.log(e);\n    return { props: {} };\n  }\n};\n\nexport default name;\n"]},"metadata":{},"sourceType":"module"}