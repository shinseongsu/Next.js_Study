{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Desktop/Nodejs/nextjs/ch2/next-app2/pages/users/[name].jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\nimport Repositories from '../../components/Repositories';\nconst style = new String(\".user-contents-wrapper.jsx-1290244236{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRGVza3RvcC9Ob2RlanMvbmV4dGpzL2NoMi9uZXh0LWFwcDIvcGFnZXMvdXNlcnMvW25hbWVdLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLaUIsQUFHa0IsMEVBQ0EsYUFDZiIsImZpbGUiOiIvVXNlcnMvbWFjL0Rlc2t0b3AvTm9kZWpzL25leHRqcy9jaDIvbmV4dC1hcHAyL3BhZ2VzL3VzZXJzL1tuYW1lXS5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3NzIGZyb20gJ3N0eWxlZC1qc3gvY3NzJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IFByb2ZpbGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Qcm9maWxlJztcbmltcG9ydCBSZXBvc2l0b3JpZXMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9SZXBvc2l0b3JpZXMnO1xuXG5jb25zdCBzdHlsZSA9IGNzc2BcbiAgLnVzZXItY29udGVudHMtd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG5gO1xuXG5jb25zdCBuYW1lID0gKHsgdXNlciwgcmVwb3MgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlci1jb250ZW50cy13cmFwcGVyXCI+XG4gICAgICA8UHJvZmlsZSB1c2VyPXt1c2VyfSAvPlxuICAgICAgPFJlcG9zaXRvcmllcyB1c2VyPXt1c2VyfSByZXBvcz17cmVwb3N9IC8+XG4gICAgICA8c3R5bGUganN4PntzdHlsZX08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wcyA9IGFzeW5jICh7IHF1ZXJ5IH0pID0+IHtcbiAgY29uc3QgeyBuYW1lLCBwYWdlIH0gPSBxdWVyeTtcblxuICB0cnkge1xuICAgIGxldCB1c2VyO1xuICAgIGxldCByZXBvcztcblxuICAgIGNvbnN0IHVzZXJSZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy8ke25hbWV9YCk7XG4gICAgaWYgKHVzZXJSZXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgIHVzZXIgPSBhd2FpdCB1c2VyUmVzLmpzb24oKTtcbiAgICB9XG4gICAgY29uc3QgcmVwb1JlcyA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvJHtuYW1lfS9yZXBvcz9zb3J0PXVwZGF0ZWQmJHtwYWdlfSZwZXJfcGFnZT0xMGBcbiAgICApO1xuICAgIGlmIChyZXBvUmVzLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICByZXBvcyA9IGF3YWl0IHJlcG9SZXMuanNvbigpO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhyZXBvcyk7XG4gICAgcmV0dXJuIHsgcHJvcHM6IHsgdXNlciwgcmVwb3MgfSB9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gICAgcmV0dXJuIHsgcHJvcHM6IHt9IH07XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IG5hbWU7XG4iXX0= */\\n/*@ sourceURL=/Users/mac/Desktop/Nodejs/nextjs/ch2/next-app2/pages/users/[name].jsx */\");\nstyle.__hash = \"1290244236\";\n\nconst name = ({\n  user,\n  repos\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `jsx-${style.__hash}` + \" \" + \"user-contents-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Profile, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      user: user,\n      repos: repos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: style.__hash,\n      children: style\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    name,\n    page\n  } = query;\n\n  try {\n    let user;\n    let repos;\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n\n    const repoRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&${page}&per_page=10`);\n\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n\n    console.log(repos);\n    return {\n      props: {\n        user,\n        repos\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      props: {}\n    };\n  }\n};\nexport default name;","map":{"version":3,"sources":["/Users/mac/Desktop/Nodejs/nextjs/ch2/next-app2/pages/users/[name].jsx"],"names":["fetch","Profile","Repositories","style","name","user","repos","getServerSideProps","query","page","userRes","status","json","repoRes","console","log","props","e"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,KAAK,opEAAX;;;AAOA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAChC,sBACE;AAAA,6CAAe,uBAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,KAAK,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;AAUA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACrD,QAAM;AAAEJ,IAAAA,IAAF;AAAQK,IAAAA;AAAR,MAAiBD,KAAvB;;AAEA,MAAI;AACF,QAAIH,IAAJ;AACA,QAAIC,KAAJ;AAEA,UAAMI,OAAO,GAAG,MAAMV,KAAK,CAAE,gCAA+BI,IAAK,EAAtC,CAA3B;;AACA,QAAIM,OAAO,CAACC,MAAR,KAAmB,GAAvB,EAA4B;AAC1BN,MAAAA,IAAI,GAAG,MAAMK,OAAO,CAACE,IAAR,EAAb;AACD;;AACD,UAAMC,OAAO,GAAG,MAAMb,KAAK,CACxB,gCAA+BI,IAAK,uBAAsBK,IAAK,cADvC,CAA3B;;AAGA,QAAII,OAAO,CAACF,MAAR,KAAmB,GAAvB,EAA4B;AAC1BL,MAAAA,KAAK,GAAG,MAAMO,OAAO,CAACD,IAAR,EAAd;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,WAAO;AAAEU,MAAAA,KAAK,EAAE;AAAEX,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAT,KAAP;AACD,GAhBD,CAgBE,OAAOW,CAAP,EAAU;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,WAAO;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD;AACF,CAvBM;AAyBP,eAAeZ,IAAf","sourcesContent":["import css from 'styled-jsx/css';\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\nimport Repositories from '../../components/Repositories';\n\nconst style = css`\n  .user-contents-wrapper {\n    display: flex;\n    padding: 20px;\n  }\n`;\n\nconst name = ({ user, repos }) => {\n  return (\n    <div className=\"user-contents-wrapper\">\n      <Profile user={user} />\n      <Repositories user={user} repos={repos} />\n      <style jsx>{style}</style>\n    </div>\n  );\n};\n\nexport const getServerSideProps = async ({ query }) => {\n  const { name, page } = query;\n\n  try {\n    let user;\n    let repos;\n\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n    const repoRes = await fetch(\n      `https://api.github.com/users/${name}/repos?sort=updated&${page}&per_page=10`\n    );\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n    console.log(repos);\n    return { props: { user, repos } };\n  } catch (e) {\n    console.log(e);\n    return { props: {} };\n  }\n};\n\nexport default name;\n"]},"metadata":{},"sourceType":"module"}