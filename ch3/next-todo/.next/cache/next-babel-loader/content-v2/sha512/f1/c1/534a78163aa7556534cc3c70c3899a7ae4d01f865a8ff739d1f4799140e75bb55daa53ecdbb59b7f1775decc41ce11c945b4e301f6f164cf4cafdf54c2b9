{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/Nodejs/nextjs/ch3/next-todo/components/TodoList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\nvar Container = styled.div.withConfig({\n  displayName: \"TodoList__Container\",\n  componentId: \"sc-1t8agvw-0\"\n})([\"width:100%;.todo-num{margin-left:12px;}.todo-list-header{padding:12px;position:relative;border-bottom:1px solid \", \";.todo-list-last-todo{font-size:14px;margin:0 0 8px;span{margin-left:12px;}}}.todo-list-header-colors{display:flex;.todo-list-header-color-num{display:flex;margin-right:8px;p{font-size:14px;line-height:16px;margin:0;margin-left:6px;}.todo-list-round-color{width:16px;height:16px;border-radius:50%;}}}.bg-blue{background-color:\", \";}.bg-green{background-color:\", \";}.bg-navy{background-color:\", \";}.bg-orange{background-color:\", \";}.bg-red{background-color:\", \";}.bg-yellow{background-color:\", \";}\"], palette.gray, palette.blue, palette.green, palette.navy, palette.orange, palette.red, palette.yellow);\n_c = Container;\n\nvar TodoList = function TodoList(_ref) {\n  _s();\n\n  var todos = _ref.todos;\n  var getTodoColorNums = useCallback(function () {\n    var red = 0;\n    var orange = 0;\n    var yellow = 0;\n    var green = 0;\n    var blue = 0;\n    var navy = 0;\n    todos.forEach(function (todo) {\n      switch (todo.color) {\n        case \"red\":\n          red += 1;\n          break;\n\n        case \"orange\":\n          orange += 1;\n          break;\n\n        case \"yellow\":\n          yellow += 1;\n          break;\n\n        case \"green\":\n          green += 1;\n          break;\n\n        case \"blue\":\n          blue += 1;\n          break;\n\n        case \"navy\":\n          navy += 1;\n          break;\n\n        default:\n          break;\n      }\n    });\n    return {\n      red: red,\n      orange: orange,\n      yellow: yellow,\n      green: green,\n      blue: blue,\n      navy: navy\n    };\n  }, [todos]);\n  var todoColorNums = useMemo(getTodoColorNums, [todos]);\n  var todoColorNum2 = useMemo(function () {\n    var colors = {};\n    todos.forEach(function (todo) {\n      var value = colors[todo.color];\n\n      if (!value) {\n        colors[\"\".concat(todo.color)] = 1;\n      } else {\n        colors[\"\".concat(todo.color)] = value + 1;\n      }\n    });\n    return colors;\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-list-last-todo\",\n        children: [\"\\uB0A8\\uC740 TODO \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [todos.length, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list-header-colors\",\n        children: Object.keys(todoColorNums).map(function (color, index) {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            className: \"todo-list-header-color-num\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-list-header-round-color bg-\".concat(color)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [todoColorNums[color], \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TodoList, \"dHqWyxpbs3C3fY9dWOF1pbfDiYo=\");\n\n_c2 = TodoList;\nexport default TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"sources":["/Users/mac/Desktop/Nodejs/nextjs/ch3/next-todo/components/TodoList.tsx"],"names":["React","useMemo","useCallback","styled","palette","Container","div","gray","blue","green","navy","orange","red","yellow","TodoList","todos","getTodoColorNums","forEach","todo","color","todoColorNums","todoColorNum2","colors","value","length","Object","keys","map","index"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\nimport { TodoTypes } from \"../types/todo\";\n\nconst Container = styled.div`\n    width: 100%;\n\n    .todo-num {\n        margin-left: 12px;\n    }\n\n    .todo-list-header {\n        padding: 12px;\n        position: relative;\n        border-bottom: 1px solid ${palette.gray};\n\n        .todo-list-last-todo {\n            font-size: 14px;\n            margin: 0 0 8px;\n            span {\n                margin-left: 12px;\n            }\n        }\n    }\n\n    .todo-list-header-colors {\n        display: flex;\n        .todo-list-header-color-num {\n            display: flex;\n            margin-right: 8px;\n            p {\n                font-size: 14px;\n                line-height: 16px;\n                margin: 0;\n                margin-left: 6px;\n            }\n            .todo-list-round-color {\n                width: 16px;\n                height: 16px;\n                border-radius: 50%;\n            }\n        }\n    }\n\n    .bg-blue {\n        background-color: ${palette.blue};\n    }\n    .bg-green {\n        background-color: ${palette.green};\n    }\n    .bg-navy {\n        background-color: ${palette.navy};\n    }\n    .bg-orange {\n        background-color: ${palette.orange};\n    }\n    .bg-red {\n        background-color: ${palette.red};\n    }\n    .bg-yellow {\n        background-color: ${palette.yellow};\n    }\n`;\n\ninterface IProps {\n    todos: TodoTypes[];\n}\n\ntype ObjectIndexType = {\n    [key: string]: number| undefined;\n}\n\nconst TodoList: React.FC<IProps> = ({ todos }) => {\n\n    const getTodoColorNums = useCallback(() => {\n        let red = 0;\n        let orange = 0;\n        let yellow = 0;\n        let green = 0;\n        let blue = 0;\n        let navy = 0;\n        todos.forEach((todo) => {\n            switch (todo.color) {\n                case \"red\":\n                    red += 1;\n                    break;\n                case \"orange\":\n                    orange += 1;\n                    break;\n                case \"yellow\":\n                    yellow += 1;\n                    break;\n                case \"green\":\n                    green += 1;\n                    break;\n                case \"blue\":\n                    blue += 1;\n                    break;\n                case \"navy\":\n                    navy += 1;\n                    break;\n                default:\n                    break;             \n            }\n        });\n\n        return {\n            red,\n            orange,\n            yellow,\n            green,\n            blue,\n            navy\n        };\n    }, [todos]);\n    const todoColorNums = useMemo(getTodoColorNums, [todos]);\n\n    const todoColorNum2 = useMemo(() => {\n        const colors: ObjectIndexType = {};\n        todos.forEach((todo) => {\n            const value = colors[todo.color];\n            if(!value) {\n                colors[`${todo.color}`] = 1;\n            } else {\n                colors[`${todo.color}`] = value + 1;\n            }\n        });\n        return colors;\n    }, [todos]);\n\n    return (\n        <Container>\n            <div className=\"todo-list-header\">\n                <p className=\"todo-list-last-todo\">\n                    남은 TODO <span>{todos.length}개</span>\n                </p>\n                <div className=\"todo-list-header-colors\">\n                    {Object.keys(todoColorNums).map((color, index) => {\n                        <div className=\"todo-list-header-color-num\" key={index}>\n                            <div className={`todo-list-header-round-color bg-${color}`} />\n                            <p>{todoColorNums[color]}개</p>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}