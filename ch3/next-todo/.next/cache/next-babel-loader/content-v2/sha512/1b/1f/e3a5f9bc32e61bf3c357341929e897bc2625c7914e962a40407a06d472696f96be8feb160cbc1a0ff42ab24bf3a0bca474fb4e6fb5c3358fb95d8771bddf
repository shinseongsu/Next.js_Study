{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Desktop/Nodejs/nextjs/ch3/next-todo/components/TodoList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\n\nvar TrashCanIcon = function TrashCanIcon(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M19 24H5a2 2 0 0 1-2-2V5H2V3h6V1.5C8 .673 8.673 0 9.5 0h5c.825 0 1.5.671 1.5 1.5V3h6v2h-1v17a2 2 0 0 1-2 2zM5 21.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V5H5v16.5zM10 3h4V2h-4v1z\"\n    }, void 0, false, void 0, this)\n  }), void 0, false, void 0, this);\n};\n\nTrashCanIcon.defaultProps = {\n  width: \"24\",\n  height: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\"\n};\n\nvar CheckMarkIcon = function CheckMarkIcon(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M20.285 2L9 13.567 3.714 8.556 0 12.272 9 21 24 5.715z\"\n    }, void 0, false, void 0, this)\n  }), void 0, false, void 0, this);\n};\n\nCheckMarkIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\"\n};\nconst Container = styled.div.withConfig({\n  displayName: \"TodoList__Container\",\n  componentId: \"sc-1t8agvw-0\"\n})([\"width:100%;.todo-num{margin-left:12px;}.todo-list-header{padding:12px;position:relative;border-bottom:1px solid \", \";.todo-list-last-todo{font-size:14px;margin:0 0 8px;span{margin-left:12px;}}}.todo-list-header-colors{display:flex;.todo-list-header-color-num{display:flex;margin-right:8px;p{font-size:14px;line-height:16px;margin:0;margin-left:6px;}.todo-list-round-color{width:16px;height:16px;border-radius:50%;}}}.bg-blue{background-color:\", \";}.bg-green{background-color:\", \";}.bg-navy{background-color:\", \";}.bg-orange{background-color:\", \";}.bg-red{background-color:\", \";}.bg-yellow{background-color:\", \";}.todo-list{.todo-item{display:flex;justify-content:space-between;align-items:center;width:100%;height:52px;border-bottom:1px solid \", \";.todo-left-side{width:100%;height:100%;display:flex;align-items:center;.todo-color-block{width:12px;height:100%;}.checked-todo-text{color:\", \";text-decoration:line-through;}.todo-text{margin-left:12px;font-size:16px;}}}}.todo-right-side{display:flex;margin-right:12px;svg{&:first-child{margin-right:16px;}}.todo-trash-can{path{fill:\", \";}}.todo-check-mark{fill:\", \";}.todo-button{width:20px;height:20px;border-radius:50%;border:1px solid \", \";background-color:transparent;outline:none;}}\"], palette.gray, palette.blue, palette.green, palette.navy, palette.orange, palette.red, palette.yellow, palette.gray, palette.gray, palette.deep_red, palette.deep_green, palette.gray);\n\nconst TodoList = ({\n  todos\n}) => {\n  const getTodoColorNums = useCallback(() => {\n    let red = 0;\n    let orange = 0;\n    let yellow = 0;\n    let green = 0;\n    let blue = 0;\n    let navy = 0;\n    todos.forEach(todo => {\n      switch (todo.color) {\n        case \"red\":\n          red += 1;\n          break;\n\n        case \"orange\":\n          orange += 1;\n          break;\n\n        case \"yellow\":\n          yellow += 1;\n          break;\n\n        case \"green\":\n          green += 1;\n          break;\n\n        case \"blue\":\n          blue += 1;\n          break;\n\n        case \"navy\":\n          navy += 1;\n          break;\n\n        default:\n          break;\n      }\n    });\n    return {\n      red,\n      orange,\n      yellow,\n      green,\n      blue,\n      navy\n    };\n  }, [todos]);\n  const todoColorNums = useMemo(getTodoColorNums, [todos]);\n  const todoColorNum2 = useMemo(() => {\n    const colors = {};\n    todos.forEach(todo => {\n      const value = colors[todo.color];\n\n      if (!value) {\n        colors[`${todo.color}`] = 1;\n      } else {\n        colors[`${todo.color}`] = value + 1;\n      }\n    });\n    return colors;\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-list-last-todo\",\n        children: [\"\\uB0A8\\uC740 TODO \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [todos.length, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list-header-colors\",\n        children: Object.keys(todoColorNums).map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list-header-color-num\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `todo-list-round-color bg-${color}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [todoColorNums[color], \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-left-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `todo-color-block bg-${todo.color}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `todo-text ${todo.checked ? \"checked-todo-text\" : \"\"}`,\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-right-side\",\n          children: [todo.checked && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TrashCanIcon, {\n              className: \"todo-trash-can\",\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CheckMarkIcon, {\n              className: \"todo-check-mark\",\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), !todo.checked && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"todo-button\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/mac/Desktop/Nodejs/nextjs/ch3/next-todo/components/TodoList.tsx"],"names":["React","useMemo","useCallback","styled","palette","TrashCanIcon","CheckMarkIcon","Container","div","gray","blue","green","navy","orange","red","yellow","deep_red","deep_green","TodoList","todos","getTodoColorNums","forEach","todo","color","todoColorNums","todoColorNum2","colors","value","length","Object","keys","map","index","checked","text","id"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../styles/palette\";\nimport { TodoTypes } from \"../types/todo\";\nimport TrashCanIcon from \"../public/statics/svg/trash_can.svg\";\nimport CheckMarkIcon from \"../public/statics/svg/check_mark.svg\";\n\nconst Container = styled.div`\n    width: 100%;\n\n    .todo-num {\n        margin-left: 12px;\n    }\n\n    .todo-list-header {\n        padding: 12px;\n        position: relative;\n        border-bottom: 1px solid ${palette.gray};\n\n        .todo-list-last-todo {\n            font-size: 14px;\n            margin: 0 0 8px;\n            span {\n                margin-left: 12px;\n            }\n        }\n    }\n\n    .todo-list-header-colors {\n        display: flex;\n        .todo-list-header-color-num {\n            display: flex;\n            margin-right: 8px;\n            p {\n                font-size: 14px;\n                line-height: 16px;\n                margin: 0;\n                margin-left: 6px;\n            }\n            .todo-list-round-color {\n                width: 16px;\n                height: 16px;\n                border-radius: 50%;\n            }\n        }\n    }\n\n    .bg-blue {\n        background-color: ${palette.blue};\n    }\n    .bg-green {\n        background-color: ${palette.green};\n    }\n    .bg-navy {\n        background-color: ${palette.navy};\n    }\n    .bg-orange {\n        background-color: ${palette.orange};\n    }\n    .bg-red {\n        background-color: ${palette.red};\n    }\n    .bg-yellow {\n        background-color: ${palette.yellow};\n    }\n\n    .todo-list {\n        .todo-item {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            width: 100%;\n            height: 52px;\n            border-bottom: 1px solid ${palette.gray};\n\n            .todo-left-side {\n                width: 100%;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                .todo-color-block {\n                    width: 12px;\n                    height: 100%;\n                }\n                .checked-todo-text {\n                    color: ${palette.gray};\n                    text-decoration: line-through;\n                }\n                .todo-text {\n                    margin-left: 12px;\n                    font-size: 16px;\n                }\n            }\n        }\n    }\n\n    .todo-right-side {\n        display: flex;\n        margin-right: 12px;\n        svg {\n            &:first-child {\n                margin-right: 16px;\n            }\n        }\n        .todo-trash-can {\n            path {\n                fill: ${palette.deep_red};\n            }\n        }\n        .todo-check-mark {\n            fill: ${palette.deep_green};\n        }\n\n        .todo-button {\n            width: 20px;\n            height: 20px;\n            border-radius: 50%;\n            border: 1px solid ${palette.gray};\n            background-color: transparent;\n            outline: none;\n        }\n    }\n`;\n\ninterface IProps {\n    todos: TodoTypes[];\n}\n\ntype ObjectIndexType = {\n    [key: string]: number| undefined;\n}\n\nconst TodoList: React.FC<IProps> = ({ todos }) => {\n\n    const getTodoColorNums = useCallback(() => {\n        let red = 0;\n        let orange = 0;\n        let yellow = 0;\n        let green = 0;\n        let blue = 0;\n        let navy = 0;\n        todos.forEach((todo) => {\n            switch (todo.color) {\n                case \"red\":\n                    red += 1;\n                    break;\n                case \"orange\":\n                    orange += 1;\n                    break;\n                case \"yellow\":\n                    yellow += 1;\n                    break;\n                case \"green\":\n                    green += 1;\n                    break;\n                case \"blue\":\n                    blue += 1;\n                    break;\n                case \"navy\":\n                    navy += 1;\n                    break;\n                default:\n                    break;             \n            }\n        });\n\n        return {\n            red,\n            orange,\n            yellow,\n            green,\n            blue,\n            navy\n        };\n    }, [todos]);\n    const todoColorNums = useMemo(getTodoColorNums, [todos]);\n\n    const todoColorNum2 = useMemo(() => {\n        const colors: ObjectIndexType = {};\n        todos.forEach((todo) => {\n            const value = colors[todo.color];\n            if(!value) {\n                colors[`${todo.color}`] = 1;\n            } else {\n                colors[`${todo.color}`] = value + 1;\n            }\n        });\n        return colors;\n    }, [todos]);\n\n    return (\n        <Container>\n            <div className=\"todo-list-header\">\n                <p className=\"todo-list-last-todo\">\n                    남은 TODO <span>{todos.length}개</span>\n                </p>\n                <div className=\"todo-list-header-colors\">\n                    {Object.keys(todoColorNums).map((color, index) => (\n                        <div className=\"todo-list-header-color-num\" key={index}>\n                            <div className={`todo-list-round-color bg-${color}`} />\n                            <p>{todoColorNums[color]}개</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <ul className=\"todo-list\">\n                {todos.map((todo) => (\n                    <li className=\"todo-item\" key={todo.id}>\n                        <div className=\"todo-left-side\">\n                            <div className={`todo-color-block bg-${todo.color}`} />\n                            <p\n                                className={`todo-text ${todo.checked ? \"checked-todo-text\": \"\"}`}>\n                                {todo.text}\n                            </p>\n                        </div>\n                        <div className=\"todo-right-side\">\n                            {todo.checked && (\n                                <>\n                                    <TrashCanIcon className=\"todo-trash-can\" onClick={() => {}} />\n                                    <CheckMarkIcon className=\"todo-check-mark\" onClick={() => {}} />\n                                </>\n                            )}\n                            {!todo.checked && (\n                                <button \n                                    type=\"button\"\n                                    className=\"todo-button\"\n                                    onClick={() => {}}\n                                    />\n                            )}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </Container>\n    );\n};\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}