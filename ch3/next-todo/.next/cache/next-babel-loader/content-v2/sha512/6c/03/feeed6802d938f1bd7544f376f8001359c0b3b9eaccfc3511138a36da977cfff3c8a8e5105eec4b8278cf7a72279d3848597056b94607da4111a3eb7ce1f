{"ast":null,"code":"import { readFileSync, writeFileSync } from \"fs\";\n\nconst getList = () => {\n  const todosBuffer = readFileSync(\"data/todos.json\");\n  const todosString = todosBuffer.toString();\n\n  if (!todosString) {\n    return [];\n  }\n\n  const todos = JSON.parse(todosString);\n  return todos;\n};\n\nconst exist = ({\n  id\n}) => {\n  const todos = getList();\n  const todo = todos.some(todo => todo.id === id);\n  return todo;\n}; // TodoList 쓰기\n\n\nconst write = async todos => {\n  writeFileSync(\"data/todos.json\", JSON.stringify(todos));\n};\n\nexport default {\n  getList,\n  exist,\n  write\n};","map":{"version":3,"sources":["/Users/mac/Desktop/Nodejs/nextjs/ch3/next-todo/lib/data/todo.ts"],"names":["readFileSync","writeFileSync","getList","todosBuffer","todosString","toString","todos","JSON","parse","exist","id","todo","some","write","stringify"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,IAA5C;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,WAAW,GAAGH,YAAY,CAAC,iBAAD,CAAhC;AACA,QAAMI,WAAW,GAAGD,WAAW,CAACE,QAAZ,EAApB;;AACA,MAAG,CAACD,WAAJ,EAAiB;AACb,WAAO,EAAP;AACH;;AACD,QAAME,KAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAA3B;AACA,SAAOE,KAAP;AACH,CARD;;AAUA,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACvC,QAAMJ,KAAK,GAAGJ,OAAO,EAArB;AACA,QAAMS,IAAI,GAAGL,KAAK,CAACM,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYA,EAAjC,CAAb;AACA,SAAOC,IAAP;AACH,CAJD,C,CAMA;;;AACA,MAAME,KAAK,GAAG,MAAOP,KAAP,IAA8B;AACxCL,EAAAA,aAAa,CAAC,iBAAD,EAAoBM,IAAI,CAACO,SAAL,CAAeR,KAAf,CAApB,CAAb;AACH,CAFD;;AAIA,eAAe;AAAEJ,EAAAA,OAAF;AAAWO,EAAAA,KAAX;AAAkBI,EAAAA;AAAlB,CAAf","sourcesContent":["import { readFileSync, writeFileSync } from \"fs\";\nimport { TodoTypes } from \"../../types/todo\";\n\nconst getList = () => {\n    const todosBuffer = readFileSync(\"data/todos.json\");\n    const todosString = todosBuffer.toString();\n    if(!todosString) {\n        return [];\n    }\n    const todos: TodoTypes[] = JSON.parse(todosString);\n    return todos;\n};\n\nconst exist = ({ id } : { id : number}) => {\n    const todos = getList();\n    const todo = todos.some((todo) => todo.id === id);\n    return todo;\n}\n\n// TodoList 쓰기\nconst write = async (todos: TodoTypes[]) => {\n    writeFileSync(\"data/todos.json\", JSON.stringify(todos));\n}\n\nexport default { getList, exist, write };"]},"metadata":{},"sourceType":"module"}