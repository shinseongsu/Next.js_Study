{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Data from \"../../../lib/data\";\nexport default (async (req, res) => {\n  if (req.method === \"PATCH\") {\n    try {\n      const todoId = Number(req.query.id);\n      const todo = Data.todo.exist({\n        id: todoId\n      });\n\n      if (!todo) {\n        res.statusCode = 404;\n        res.end();\n      }\n\n      const todos = Data.todo.getList();\n      const changedTodos = todos.map(todo => {\n        if (todo.id === todoId) {\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            checked: !todo.checked\n          });\n        }\n\n        return todo;\n      });\n      Data.todo.write(changedTodos);\n      res.statusCode = 200;\n      res.end();\n    } catch (e) {\n      console.log(e);\n      res.statusCode = 500;\n      res.send(e);\n    }\n  }\n\n  res.statusCode = 405;\n  return res.end();\n});","map":{"version":3,"sources":["/Users/mac/Desktop/Nodejs/nextjs/ch3/next-todo/pages/api/todos/[id].ts"],"names":["Data","req","res","method","todoId","Number","query","id","todo","exist","statusCode","end","todos","getList","changedTodos","map","checked","write","e","console","log","send"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AAEA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AAChE,MAAGD,GAAG,CAACE,MAAJ,KAAe,OAAlB,EAA2B;AACvB,QAAI;AACA,YAAMC,MAAM,GAAGC,MAAM,CAACJ,GAAG,CAACK,KAAJ,CAAUC,EAAX,CAArB;AACA,YAAMC,IAAI,GAAGR,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgB;AAAEF,QAAAA,EAAE,EAAGH;AAAP,OAAhB,CAAb;;AACA,UAAI,CAACI,IAAL,EAAW;AACPN,QAAAA,GAAG,CAACQ,UAAJ,GAAiB,GAAjB;AACAR,QAAAA,GAAG,CAACS,GAAJ;AACH;;AAED,YAAMC,KAAK,GAAGZ,IAAI,CAACQ,IAAL,CAAUK,OAAV,EAAd;AACA,YAAMC,YAAY,GAAGF,KAAK,CAACG,GAAN,CAAWP,IAAD,IAAU;AACrC,YAAGA,IAAI,CAACD,EAAL,KAAYH,MAAf,EAAuB;AACnB,iDAAYI,IAAZ;AAAkBQ,YAAAA,OAAO,EAAE,CAACR,IAAI,CAACQ;AAAjC;AACH;;AACD,eAAOR,IAAP;AACH,OALoB,CAArB;AAMAR,MAAAA,IAAI,CAACQ,IAAL,CAAUS,KAAV,CAAgBH,YAAhB;AACAZ,MAAAA,GAAG,CAACQ,UAAJ,GAAiB,GAAjB;AACAR,MAAAA,GAAG,CAACS,GAAJ;AAEH,KAnBD,CAmBE,OAAOO,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAhB,MAAAA,GAAG,CAACQ,UAAJ,GAAiB,GAAjB;AACAR,MAAAA,GAAG,CAACmB,IAAJ,CAASH,CAAT;AACH;AACJ;;AACDhB,EAAAA,GAAG,CAACQ,UAAJ,GAAiB,GAAjB;AACA,SAAOR,GAAG,CAACS,GAAJ,EAAP;AACH,CA7BD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\nimport Data from \"../../../lib/data\";\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n    if(req.method === \"PATCH\") {\n        try {\n            const todoId = Number(req.query.id);\n            const todo = Data.todo.exist({ id : todoId });\n            if (!todo) {\n                res.statusCode = 404;\n                res.end();\n            }\n\n            const todos = Data.todo.getList();\n            const changedTodos = todos.map((todo) => {\n                if(todo.id === todoId) {\n                    return { ...todo, checked: !todo.checked};\n                }\n                return todo;\n            });\n            Data.todo.write(changedTodos);\n            res.statusCode = 200;\n            res.end();\n\n        } catch (e) {\n            console.log(e);\n            res.statusCode = 500;\n            res.send(e);\n        }\n    }\n    res.statusCode = 405;\n    return res.end();\n}"]},"metadata":{},"sourceType":"module"}